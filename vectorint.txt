Classfile /C:/Users/Tim Lindeberg/IdeaProjects/T-Compiler/kool/std/-Vector$Integer-.class
  Last modified Jul 25, 2015; size 3551 bytes
  MD5 checksum f4aea4c9080b974f1a11a42bfad2de71
  Compiled from "vector.kool"
public class kool.std.-Vector$Integer-
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Utf8               kool/std/-Vector$Integer-
    #2 = Class              #1            // "kool/std/-Vector$Integer-"
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               vector.kool
    #6 = Utf8               SourceFile
    #7 = Utf8               InitialCapacity
    #8 = Utf8               I
    #9 = Utf8               size
   #10 = Utf8               data
   #11 = Utf8               [Lkool/std/Integer;
   #12 = Utf8               <init>
   #13 = Utf8               ()V
   #14 = Utf8               Code
   #15 = NameAndType        #7:#8         // InitialCapacity:I
   #16 = Fieldref           #2.#15        // "kool/std/-Vector$Integer-".InitialCapacity:I
   #17 = NameAndType        #9:#8         // size:I
   #18 = Fieldref           #2.#17        // "kool/std/-Vector$Integer-".size:I
   #19 = NameAndType        #12:#13       // "<init>":()V
   #20 = Methodref          #4.#19        // java/lang/Object."<init>":()V
   #21 = Utf8               Clear
   #22 = NameAndType        #21:#13       // Clear:()V
   #23 = Methodref          #2.#22        // "kool/std/-Vector$Integer-".Clear:()V
   #24 = Utf8               LineNumberTable
   #25 = Utf8               (ILkool/std/Integer;)V
   #26 = Utf8               kool/std/Integer
   #27 = Class              #26           // kool/std/Integer
   #28 = NameAndType        #10:#11       // data:[Lkool/std/Integer;
   #29 = Fieldref           #2.#28        // "kool/std/-Vector$Integer-".data:[Lkool/std/Integer;
   #30 = Utf8               (Lkool/std/-Vector$Integer-;)V
   #31 = Utf8               AddAll
   #32 = Utf8               (Lkool/std/-Vector$Integer-;)Z
   #33 = NameAndType        #31:#32       // AddAll:(Lkool/std/-Vector$Integer-;)Z
   #34 = Methodref          #2.#33        // "kool/std/-Vector$Integer-".AddAll:(Lkool/std/-Vector$Integer-;)Z
   #35 = Utf8               NonEmpty
   #36 = Utf8               ()Z
   #37 = Utf8               IsEmpty
   #38 = Utf8               Iterator
   #39 = Utf8               ()Lkool/std/-VectorIterator$Integer-;
   #40 = Utf8               kool/std/-VectorIterator$Integer-
   #41 = Class              #40           // "kool/std/-VectorIterator$Integer-"
   #42 = NameAndType        #12:#30       // "<init>":(Lkool/std/-Vector$Integer-;)V
   #43 = Methodref          #41.#42       // "kool/std/-VectorIterator$Integer-"."<init>":(Lkool/std/-Vector$Integer-;)V
   #44 = Utf8               Push
   #45 = Utf8               (Lkool/std/Integer;)V
   #46 = Utf8               increaseStorage
   #47 = NameAndType        #46:#13       // increaseStorage:()V
   #48 = Methodref          #2.#47        // "kool/std/-Vector$Integer-".increaseStorage:()V
   #49 = Utf8               Pop
   #50 = Utf8               ()Lkool/std/-Option$Integer-;
   #51 = Utf8               kool/std/-Option$Integer-
   #52 = Class              #51           // "kool/std/-Option$Integer-"
   #53 = Methodref          #52.#19       // "kool/std/-Option$Integer-"."<init>":()V
   #54 = Utf8               Add
   #55 = Utf8               (Lkool/std/Integer;)Lkool/std/-Option$Integer-;
   #56 = NameAndType        #54:#55       // Add:(Lkool/std/Integer;)Lkool/std/-Option$Integer-;
   #57 = Methodref          #52.#56       // "kool/std/-Option$Integer-".Add:(Lkool/std/Integer;)Lkool/std/-Option$Integer-;
   #58 = Utf8               (ILkool/std/Integer;)Z
   #59 = NameAndType        #54:#58       // Add:(ILkool/std/Integer;)Z
   #60 = Methodref          #2.#59        // "kool/std/-Vector$Integer-".Add:(ILkool/std/Integer;)Z
   #61 = NameAndType        #38:#39       // Iterator:()Lkool/std/-VectorIterator$Integer-;
   #62 = Methodref          #2.#61        // "kool/std/-Vector$Integer-".Iterator:()Lkool/std/-VectorIterator$Integer-;
   #63 = Utf8               HasNext
   #64 = NameAndType        #63:#36       // HasNext:()Z
   #65 = Methodref          #41.#64       // "kool/std/-VectorIterator$Integer-".HasNext:()Z
   #66 = Utf8               Next
   #67 = Utf8               ()Lkool/std/Integer;
   #68 = NameAndType        #66:#67       // Next:()Lkool/std/Integer;
   #69 = Methodref          #41.#68       // "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
   #70 = NameAndType        #44:#45       // Push:(Lkool/std/Integer;)V
   #71 = Methodref          #2.#70        // "kool/std/-Vector$Integer-".Push:(Lkool/std/Integer;)V
   #72 = Utf8               (ILkool/std/-Vector$Integer-;)Z
   #73 = Utf8               Remove
   #74 = Utf8               (I)Z
   #75 = Utf8               indexInRange
   #76 = NameAndType        #75:#74       // indexInRange:(I)Z
   #77 = Methodref          #2.#76        // "kool/std/-Vector$Integer-".indexInRange:(I)Z
   #78 = Utf8               Get
   #79 = Utf8               (I)Lkool/std/-Option$Integer-;
   #80 = Utf8               Set
   #81 = Utf8               IndexOf
   #82 = Utf8               (Lkool/std/Integer;)I
   #83 = Utf8               Equals
   #84 = Utf8               (Lkool/std/Integer;)Z
   #85 = NameAndType        #83:#84       // Equals:(Lkool/std/Integer;)Z
   #86 = Methodref          #27.#85       // kool/std/Integer.Equals:(Lkool/std/Integer;)Z
   #87 = Utf8               LastIndexOf
   #88 = Utf8               Contains
   #89 = NameAndType        #81:#82       // IndexOf:(Lkool/std/Integer;)I
   #90 = Methodref          #2.#89        // "kool/std/-Vector$Integer-".IndexOf:(Lkool/std/Integer;)I
   #91 = Utf8               toString
   #92 = Utf8               ()Ljava/lang/String;
   #93 = Utf8               []
   #94 = String             #93           // []
   #95 = Utf8               [
   #96 = String             #95           // [
   #97 = Utf8               java/lang/StringBuilder
   #98 = Class              #97           // java/lang/StringBuilder
   #99 = Methodref          #98.#19       // java/lang/StringBuilder."<init>":()V
  #100 = Utf8               append
  #101 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #102 = NameAndType        #100:#101     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #103 = Methodref          #98.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #104 = NameAndType        #91:#92       // toString:()Ljava/lang/String;
  #105 = Methodref          #27.#104      // kool/std/Integer.toString:()Ljava/lang/String;
  #106 = Methodref          #98.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #107 = Utf8               ,
  #108 = String             #107          // ,
  #109 = Utf8                ]
  #110 = String             #109          //  ]
  #111 = Utf8               Size
  #112 = Utf8               ()I
{
  public kool.std.-Vector$Integer-();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: bipush        16
         3: putfield      #16                 // Field InitialCapacity:I
         6: aload_0
         7: iconst_0
         8: putfield      #18                 // Field size:I
        11: aload_0
        12: invokespecial #20                 // Method java/lang/Object."<init>":()V
        15: aload_0
        16: invokevirtual #23                 // Method Clear:()V
        19: return
      LineNumberTable:
        line 7: 1
        line 8: 7
        line 0: 15

  public kool.std.-Vector$Integer-(int, kool.std.Integer);
    descriptor: (ILkool/std/Integer;)V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: bipush        16
         3: putfield      #16                 // Field InitialCapacity:I
         6: aload_0
         7: iconst_0
         8: putfield      #18                 // Field size:I
        11: aload_0
        12: invokespecial #20                 // Method java/lang/Object."<init>":()V
        15: iconst_0
        16: istore_3
        17: aload_0
        18: iload_1
        19: putfield      #18                 // Field size:I
        22: aload_0
        23: aload_0
        24: getfield      #18                 // Field size:I
        27: anewarray     #27                 // class kool/std/Integer
        30: putfield      #29                 // Field data:[Lkool/std/Integer;
        33: iconst_0
        34: istore_3
        35: iload_3
        36: aload_0
        37: getfield      #18                 // Field size:I
        40: if_icmplt     46
        43: goto          68
        46: aload_0
        47: getfield      #29                 // Field data:[Lkool/std/Integer;
        50: iload_3
        51: aload_2
        52: aastore
        53: iload_3
        54: iconst_1
        55: iadd
        56: istore_3
        57: iload_3
        58: aload_0
        59: getfield      #18                 // Field size:I
        62: if_icmplt     46
        65: goto          68
        68: return
      LineNumberTable:
        line 7: 1
        line 8: 7
        line 17: 17
        line 18: 22
        line 19: 33
        line 20: 46
        line 0: 53
        line 19: 57

  public kool.std.-Vector$Integer-(kool.std.-Vector$Integer-);
    descriptor: (Lkool/std/-Vector$Integer-;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: bipush        16
         3: putfield      #16                 // Field InitialCapacity:I
         6: aload_0
         7: iconst_0
         8: putfield      #18                 // Field size:I
        11: aload_0
        12: invokespecial #20                 // Method java/lang/Object."<init>":()V
        15: aload_0
        16: aload_1
        17: invokevirtual #34                 // Method AddAll:(Lkool/std/-Vector$Integer-;)Z
        20: pop
        21: return
      LineNumberTable:
        line 7: 1
        line 8: 7
        line 0: 15
        line 24: 16

  public boolean NonEmpty();
    descriptor: ()Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field size:I
         4: iconst_0
         5: if_icmpne     11
         8: goto          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 28: 0

  public boolean IsEmpty();
    descriptor: ()Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field size:I
         4: iconst_0
         5: if_icmpeq     11
         8: goto          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 32: 0

  public void Clear();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: putfield      #18                 // Field size:I
         5: aload_0
         6: aload_0
         7: getfield      #16                 // Field InitialCapacity:I
        10: anewarray     #27                 // class kool/std/Integer
        13: putfield      #29                 // Field data:[Lkool/std/Integer;
        16: return
      LineNumberTable:
        line 36: 0
        line 37: 5

  public kool.std.-VectorIterator$Integer- Iterator();
    descriptor: ()Lkool/std/-VectorIterator$Integer-;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #41                 // class "kool/std/-VectorIterator$Integer-"
         3: dup
         4: aload_0
         5: invokespecial #43                 // Method "kool/std/-VectorIterator$Integer-"."<init>":(Lkool/std/-Vector$Integer-;)V
         8: areturn
      LineNumberTable:
        line 41: 0

  public void Push(kool.std.Integer);
    descriptor: (Lkool/std/Integer;)V
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: getfield      #18                 // Field size:I
         4: aload_0
         5: getfield      #29                 // Field data:[Lkool/std/Integer;
         8: arraylength
         9: if_icmpge     15
        12: goto          22
        15: aload_0
        16: invokevirtual #48                 // Method increaseStorage:()V
        19: goto          22
        22: aload_0
        23: getfield      #29                 // Field data:[Lkool/std/Integer;
        26: aload_0
        27: aload_0
        28: getfield      #18                 // Field size:I
        31: dup_x1
        32: iconst_1
        33: iadd
        34: putfield      #18                 // Field size:I
        37: aload_1
        38: aastore
        39: return
      LineNumberTable:
        line 45: 0
        line 0: 15
        line 48: 22

  public kool.std.-Option$Integer- Pop();
    descriptor: ()Lkool/std/-Option$Integer-;
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: new           #52                 // class "kool/std/-Option$Integer-"
         3: dup
         4: invokespecial #53                 // Method "kool/std/-Option$Integer-"."<init>":()V
         7: astore_1
         8: aload_0
         9: getfield      #18                 // Field size:I
        12: iconst_0
        13: if_icmpeq     19
        16: goto          24
        19: aload_1
        20: areturn
        21: goto          24
        24: aload_1
        25: aload_0
        26: getfield      #29                 // Field data:[Lkool/std/Integer;
        29: aload_0
        30: aload_0
        31: getfield      #18                 // Field size:I
        34: dup_x1
        35: iconst_1
        36: isub
        37: putfield      #18                 // Field size:I
        40: aaload
        41: invokevirtual #57                 // Method "kool/std/-Option$Integer-".Add:(Lkool/std/Integer;)Lkool/std/-Option$Integer-;
        44: areturn
      LineNumberTable:
        line 52: 0
        line 53: 8
        line 54: 19
        line 56: 24

  public void Add(kool.std.Integer);
    descriptor: (Lkool/std/Integer;)V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iconst_0
         2: aload_1
         3: invokevirtual #60                 // Method Add:(ILkool/std/Integer;)Z
         6: pop
         7: return
      LineNumberTable:
        line 0: 0
        line 60: 1

  public boolean Add(int, kool.std.Integer);
    descriptor: (ILkool/std/Integer;)Z
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: iconst_0
         1: istore_3
         2: aload_0
         3: getfield      #18                 // Field size:I
         6: aload_0
         7: getfield      #29                 // Field data:[Lkool/std/Integer;
        10: arraylength
        11: if_icmpge     17
        14: goto          24
        17: aload_0
        18: invokevirtual #48                 // Method increaseStorage:()V
        21: goto          24
        24: aload_0
        25: getfield      #18                 // Field size:I
        28: istore_3
        29: iload_3
        30: iload_1
        31: if_icmpgt     37
        34: goto          63
        37: aload_0
        38: getfield      #29                 // Field data:[Lkool/std/Integer;
        41: iload_3
        42: aload_0
        43: getfield      #29                 // Field data:[Lkool/std/Integer;
        46: iload_3
        47: iconst_1
        48: isub
        49: aaload
        50: aastore
        51: iload_3
        52: iconst_1
        53: isub
        54: istore_3
        55: iload_3
        56: iload_1
        57: if_icmpgt     37
        60: goto          63
        63: aload_0
        64: getfield      #29                 // Field data:[Lkool/std/Integer;
        67: iload_1
        68: aload_2
        69: aastore
        70: aload_0
        71: aload_0
        72: getfield      #18                 // Field size:I
        75: iconst_1
        76: iadd
        77: putfield      #18                 // Field size:I
        80: iconst_0
        81: ireturn
      LineNumberTable:
        line 65: 2
        line 0: 17
        line 68: 24
        line 69: 37
        line 0: 51
        line 68: 55
        line 71: 63
        line 72: 70

  public boolean AddAll(kool.std.-Vector$Integer-);
    descriptor: (Lkool/std/-Vector$Integer-;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #62                 // Method Iterator:()Lkool/std/-VectorIterator$Integer-;
         4: astore_2
         5: aload_2
         6: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
         9: ifeq          33
        12: goto          15
        15: aload_0
        16: aload_2
        17: invokevirtual #69                 // Method "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
        20: invokevirtual #71                 // Method Push:(Lkool/std/Integer;)V
        23: aload_2
        24: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        27: ifeq          33
        30: goto          15
        33: iconst_0
        34: ireturn
      LineNumberTable:
        line 76: 0
        line 78: 5
        line 0: 15
        line 79: 16
        line 78: 23

  public boolean AddAll(int, kool.std.-Vector$Integer-);
    descriptor: (ILkool/std/-Vector$Integer-;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_2
         1: invokevirtual #62                 // Method Iterator:()Lkool/std/-VectorIterator$Integer-;
         4: astore_3
         5: aload_3
         6: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
         9: ifeq          45
        12: goto          15
        15: aload_0
        16: iload_1
        17: aload_3
        18: invokevirtual #69                 // Method "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
        21: invokevirtual #60                 // Method Add:(ILkool/std/Integer;)Z
        24: ifeq          30
        27: goto          35
        30: iconst_0
        31: ireturn
        32: goto          35
        35: aload_3
        36: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        39: ifeq          45
        42: goto          15
        45: iconst_1
        46: ireturn
      LineNumberTable:
        line 83: 0
        line 85: 5
        line 0: 15
        line 86: 16
        line 87: 30
        line 85: 35
        line 90: 45

  public boolean Remove(int);
    descriptor: (I)Z
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: iconst_0
         1: istore_2
         2: aload_0
         3: iload_1
         4: invokevirtual #77                 // Method indexInRange:(I)Z
         7: ifeq          13
        10: goto          18
        13: iconst_0
        14: ireturn
        15: goto          18
        18: iload_1
        19: istore_2
        20: iload_2
        21: aload_0
        22: getfield      #18                 // Field size:I
        25: if_icmplt     31
        28: goto          60
        31: aload_0
        32: getfield      #29                 // Field data:[Lkool/std/Integer;
        35: iload_2
        36: aload_0
        37: getfield      #29                 // Field data:[Lkool/std/Integer;
        40: iload_2
        41: iconst_1
        42: iadd
        43: aaload
        44: aastore
        45: iload_2
        46: iconst_1
        47: iadd
        48: istore_2
        49: iload_2
        50: aload_0
        51: getfield      #18                 // Field size:I
        54: if_icmplt     31
        57: goto          60
        60: aload_0
        61: aload_0
        62: getfield      #18                 // Field size:I
        65: iconst_1
        66: isub
        67: putfield      #18                 // Field size:I
        70: iconst_1
        71: ireturn
      LineNumberTable:
        line 0: 2
        line 96: 3
        line 97: 13
        line 99: 18
        line 100: 31
        line 0: 45
        line 99: 49
        line 102: 60
        line 103: 70

  public kool.std.-Option$Integer- Get(int);
    descriptor: (I)Lkool/std/-Option$Integer-;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: new           #52                 // class "kool/std/-Option$Integer-"
         3: dup
         4: invokespecial #53                 // Method "kool/std/-Option$Integer-"."<init>":()V
         7: astore_2
         8: aload_0
         9: iload_1
        10: invokevirtual #77                 // Method indexInRange:(I)Z
        13: ifeq          19
        16: goto          24
        19: aload_2
        20: areturn
        21: goto          24
        24: aload_2
        25: aload_0
        26: getfield      #29                 // Field data:[Lkool/std/Integer;
        29: iload_1
        30: aaload
        31: invokevirtual #57                 // Method "kool/std/-Option$Integer-".Add:(Lkool/std/Integer;)Lkool/std/-Option$Integer-;
        34: pop
        35: aload_2
        36: areturn
      LineNumberTable:
        line 107: 0
        line 0: 8
        line 108: 9
        line 109: 19
        line 111: 24
        line 112: 35

  public boolean Set(int, kool.std.Integer);
    descriptor: (ILkool/std/Integer;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: invokevirtual #77                 // Method indexInRange:(I)Z
         5: ifeq          11
         8: goto          16
        11: iconst_0
        12: ireturn
        13: goto          16
        16: aload_0
        17: getfield      #29                 // Field data:[Lkool/std/Integer;
        20: iload_1
        21: aload_2
        22: aastore
        23: iconst_1
        24: ireturn
      LineNumberTable:
        line 0: 0
        line 116: 1
        line 117: 11
        line 119: 16
        line 120: 23

  public int IndexOf(kool.std.Integer);
    descriptor: (Lkool/std/Integer;)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: iconst_0
         1: istore_2
         2: iconst_0
         3: istore_2
         4: iload_2
         5: aload_0
         6: getfield      #18                 // Field size:I
         9: if_icmplt     15
        12: goto          51
        15: aload_0
        16: getfield      #29                 // Field data:[Lkool/std/Integer;
        19: iload_2
        20: aaload
        21: aload_1
        22: invokevirtual #86                 // Method kool/std/Integer.Equals:(Lkool/std/Integer;)Z
        25: ifeq          36
        28: goto          31
        31: iload_2
        32: ireturn
        33: goto          36
        36: iload_2
        37: iconst_1
        38: iadd
        39: istore_2
        40: iload_2
        41: aload_0
        42: getfield      #18                 // Field size:I
        45: if_icmplt     15
        48: goto          51
        51: iconst_m1
        52: ireturn
      LineNumberTable:
        line 125: 2
        line 126: 15
        line 127: 31
        line 0: 36
        line 125: 40
        line 130: 51

  public int LastIndexOf(kool.std.Integer);
    descriptor: (Lkool/std/Integer;)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: iconst_0
         1: istore_2
         2: iconst_m1
         3: istore_3
         4: iconst_0
         5: istore_2
         6: iload_2
         7: aload_0
         8: getfield      #18                 // Field size:I
        11: if_icmplt     17
        14: goto          53
        17: aload_0
        18: getfield      #29                 // Field data:[Lkool/std/Integer;
        21: iload_2
        22: aaload
        23: aload_1
        24: invokevirtual #86                 // Method kool/std/Integer.Equals:(Lkool/std/Integer;)Z
        27: ifeq          38
        30: goto          33
        33: iconst_m1
        34: istore_3
        35: goto          38
        38: iload_2
        39: iconst_1
        40: iadd
        41: istore_2
        42: iload_2
        43: aload_0
        44: getfield      #18                 // Field size:I
        47: if_icmplt     17
        50: goto          53
        53: iload_3
        54: ireturn
      LineNumberTable:
        line 135: 2
        line 136: 4
        line 137: 17
        line 138: 33
        line 0: 38
        line 136: 42
        line 141: 53

  public boolean Contains(kool.std.Integer);
    descriptor: (Lkool/std/Integer;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #90                 // Method IndexOf:(Lkool/std/Integer;)I
         5: iconst_m1
         6: if_icmpne     12
         9: goto          16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      LineNumberTable:
        line 0: 0
        line 145: 1

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aconst_null
         1: astore_1
         2: aconst_null
         3: astore_2
         4: aload_0
         5: getfield      #18                 // Field size:I
         8: iconst_0
         9: if_icmpeq     15
        12: goto          21
        15: ldc           #94                 // String []
        17: areturn
        18: goto          21
        21: aload_0
        22: invokevirtual #62                 // Method Iterator:()Lkool/std/-VectorIterator$Integer-;
        25: astore_1
        26: ldc           #96                 // String [
        28: astore_2
        29: aload_1
        30: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        33: ifeq          107
        36: goto          39
        39: new           #98                 // class java/lang/StringBuilder
        42: dup
        43: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
        46: aload_2
        47: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: aload_1
        51: invokevirtual #69                 // Method "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
        54: invokevirtual #105                // Method kool/std/Integer.toString:()Ljava/lang/String;
        57: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        63: astore_2
        64: aload_1
        65: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        68: ifeq          97
        71: goto          74
        74: new           #98                 // class java/lang/StringBuilder
        77: dup
        78: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
        81: aload_2
        82: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: ldc           #108                // String ,
        87: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        93: astore_2
        94: goto          97
        97: aload_1
        98: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
       101: ifeq          107
       104: goto          39
       107: new           #98                 // class java/lang/StringBuilder
       110: dup
       111: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
       114: aload_2
       115: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       118: ldc           #110                // String  ]
       120: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       126: astore_2
       127: aload_2
       128: areturn
      LineNumberTable:
        line 152: 4
        line 153: 15
        line 0: 21
        line 156: 26
        line 157: 29
        line 158: 39
        line 158: 50
        line 159: 64
        line 157: 97
        line 161: 107
        line 162: 127

  public int Size();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field size:I
         4: ireturn
      LineNumberTable:
        line 166: 0

  public boolean Equals(kool.std.-Vector$Integer-);
    descriptor: (Lkool/std/-Vector$Integer-;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aconst_null
         1: astore_2
         2: aconst_null
         3: astore_3
         4: iconst_0
         5: istore        4
         7: aload_0
         8: getfield      #18                 // Field size:I
        11: aload_1
        12: getfield      #18                 // Field size:I
        15: if_icmpne     21
        18: goto          26
        21: iconst_0
        22: ireturn
        23: goto          26
        26: aload_0
        27: invokevirtual #62                 // Method Iterator:()Lkool/std/-VectorIterator$Integer-;
        30: astore_2
        31: aload_1
        32: invokevirtual #62                 // Method Iterator:()Lkool/std/-VectorIterator$Integer-;
        35: astore_3
        36: aload_2
        37: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        40: ifeq          78
        43: goto          46
        46: aload_2
        47: invokevirtual #69                 // Method "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
        50: aload_3
        51: invokevirtual #69                 // Method "kool/std/-VectorIterator$Integer-".Next:()Lkool/std/Integer;
        54: invokevirtual #86                 // Method kool/std/Integer.Equals:(Lkool/std/Integer;)Z
        57: ifeq          63
        60: goto          68
        63: iconst_0
        64: ireturn
        65: goto          68
        68: aload_2
        69: invokevirtual #65                 // Method "kool/std/-VectorIterator$Integer-".HasNext:()Z
        72: ifeq          78
        75: goto          46
        78: iconst_1
        79: ireturn
      LineNumberTable:
        line 174: 7
        line 175: 21
        line 0: 26
        line 178: 31
        line 179: 36
        line 180: 46
        line 181: 63
        line 179: 68
        line 184: 78
}
SourceFile: "vector.kool"
