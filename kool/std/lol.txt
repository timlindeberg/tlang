Classfile /Users/timlindeberg/workspacescala/T-Compiler/kool/std/vec3.class
  Last modified Aug 5, 2015; size 3112 bytes
  MD5 checksum 5fd9762dbea3230ee8d7a62c45600c2c
  Compiled from "Vector3.kool"
public class kool.std.-Vector3$Double-
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Utf8               kool/std/-Vector3$Double-
   #2 = Class              #1             // "kool/std/-Vector3$Double-"
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Vector3.kool
   #6 = Utf8               SourceFile
   #7 = Utf8               X
   #8 = Utf8               D
   #9 = Utf8               Y
  #10 = Utf8               Z
  #11 = Utf8               <init>
  #12 = Utf8               (DDD)V
  #13 = Utf8               Code
  #14 = Utf8               ()V
  #15 = NameAndType        #11:#14        // "<init>":()V
  #16 = Methodref          #4.#15         // java/lang/Object."<init>":()V
  #17 = NameAndType        #7:#8          // X:D
  #18 = Fieldref           #2.#17         // "kool/std/-Vector3$Double-".X:D
  #19 = NameAndType        #9:#8          // Y:D
  #20 = Fieldref           #2.#19         // "kool/std/-Vector3$Double-".Y:D
  #21 = NameAndType        #10:#8         // Z:D
  #22 = Fieldref           #2.#21         // "kool/std/-Vector3$Double-".Z:D
  #23 = Utf8               LineNumberTable
  #24 = Utf8               (D)V
  #25 = Utf8               Plus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #26 = Utf8               (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #27 = NameAndType        #11:#12        // "<init>":(DDD)V
  #28 = Methodref          #2.#27         // "kool/std/-Vector3$Double-"."<init>":(DDD)V
  #29 = Utf8               Minus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #30 = Utf8               Times$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #31 = Utf8               Times$Double$kool/std/-Vector3$Double-
  #32 = Utf8               (DLkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #33 = Utf8               Times$kool/std/-Vector3$Double-$Double
  #34 = Utf8               (Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
  #35 = NameAndType        #31:#32        // "Times$Double$kool/std/-Vector3$Double-":(DLkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #36 = Methodref          #2.#35         // "kool/std/-Vector3$Double-"."Times$Double$kool/std/-Vector3$Double-":(DLkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #37 = Utf8               Div$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #38 = Utf8               Div$kool/std/-Vector3$Double-$Double
  #39 = Utf8               Equals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #40 = Utf8               (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
  #41 = Utf8               NotEquals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #42 = NameAndType        #39:#40        // "Equals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
  #43 = Methodref          #2.#42         // "kool/std/-Vector3$Double-"."Equals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
  #44 = Utf8               LogicXor$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #45 = Utf8               Cross
  #46 = Utf8               (Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #47 = NameAndType        #45:#46        // Cross:(Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #48 = Methodref          #2.#47         // "kool/std/-Vector3$Double-".Cross:(Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #49 = Utf8               LogicOr$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-
  #50 = Utf8               (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)D
  #51 = Utf8               Dot
  #52 = Utf8               (Lkool/std/-Vector3$Double-;)D
  #53 = NameAndType        #51:#52        // Dot:(Lkool/std/-Vector3$Double-;)D
  #54 = Methodref          #2.#53         // "kool/std/-Vector3$Double-".Dot:(Lkool/std/-Vector3$Double-;)D
  #55 = Utf8               Angle
  #56 = Utf8               Magnitude
  #57 = Utf8               ()D
  #58 = NameAndType        #56:#57        // Magnitude:()D
  #59 = Methodref          #2.#58         // "kool/std/-Vector3$Double-".Magnitude:()D
  #60 = Utf8               java/lang/Math
  #61 = Class              #60            // java/lang/Math
  #62 = Utf8               acos
  #63 = Utf8               (D)D
  #64 = NameAndType        #62:#63        // acos:(D)D
  #65 = Methodref          #61.#64        // java/lang/Math.acos:(D)D
  #66 = Utf8               Distance
  #67 = NameAndType        #29:#26        // "Minus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #68 = Methodref          #2.#67         // "kool/std/-Vector3$Double-"."Minus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
  #69 = Utf8               sqrt
  #70 = NameAndType        #69:#63        // sqrt:(D)D
  #71 = Methodref          #61.#70        // java/lang/Math.sqrt:(D)D
  #72 = Utf8               Normalized
  #73 = Utf8               ()Lkool/std/-Vector3$Double-;
  #74 = NameAndType        #38:#34        // "Div$kool/std/-Vector3$Double-$Double":(Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
  #75 = Methodref          #2.#74         // "kool/std/-Vector3$Double-"."Div$kool/std/-Vector3$Double-$Double":(Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
  #76 = Utf8               toString
  #77 = Utf8               ()Ljava/lang/String;
  #78 = Utf8               java/lang/StringBuilder
  #79 = Class              #78            // java/lang/StringBuilder
  #80 = Methodref          #79.#15        // java/lang/StringBuilder."<init>":()V
  #81 = Utf8               (
  #82 = String             #81            // (
  #83 = Utf8               append
  #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #85 = NameAndType        #83:#84        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #86 = Methodref          #79.#85        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #87 = Utf8               (D)Ljava/lang/StringBuilder;
  #88 = NameAndType        #83:#87        // append:(D)Ljava/lang/StringBuilder;
  #89 = Methodref          #79.#88        // java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
  #90 = NameAndType        #76:#77        // toString:()Ljava/lang/String;
  #91 = Methodref          #79.#90        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #92 = Utf8               ,
  #93 = String             #92            // ,
  #94 = Utf8               )
  #95 = String             #94            // )
{
  public double X;
    descriptor: D
    flags: ACC_PUBLIC

  public double Y;
    descriptor: D
    flags: ACC_PUBLIC

  public double Z;
    descriptor: D
    flags: ACC_PUBLIC

  public kool.std.-Vector3$Double-(double, double, double);
    descriptor: (DDD)V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=4
         0: aload_0
         1: invokespecial #16                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: dload_1
         6: putfield      #18                 // Field X:D
         9: aload_0
        10: dload_2
        11: putfield      #20                 // Field Y:D
        14: aload_0
        15: dload_3
        16: putfield      #22                 // Field Z:D
        19: return
      LineNumberTable:
        line 16: 4
        line 17: 9
        line 18: 14

  public kool.std.-Vector3$Double-(double);
    descriptor: (D)V
    flags: ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=2
         0: aload_0
         1: invokespecial #16                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_0
         6: aload_0
         7: dload_1
         8: dup2_x1
         9: putfield      #22                 // Field Z:D
        12: dup2_x1
        13: putfield      #20                 // Field Y:D
        16: putfield      #18                 // Field X:D
        19: return
      LineNumberTable:
        line 22: 4

  public static kool.std.-Vector3$Double- Plus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=2, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: aload_1
         9: getfield      #18                 // Field X:D
        12: dadd
        13: aload_0
        14: getfield      #20                 // Field Y:D
        17: aload_1
        18: getfield      #20                 // Field Y:D
        21: dadd
        22: aload_0
        23: getfield      #22                 // Field Z:D
        26: aload_1
        27: getfield      #22                 // Field Z:D
        30: dadd
        31: invokespecial #28                 // Method "<init>":(DDD)V
        34: areturn
      LineNumberTable:
        line 30: 0

  public static kool.std.-Vector3$Double- Minus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=2, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: aload_1
         9: getfield      #18                 // Field X:D
        12: dsub
        13: aload_0
        14: getfield      #20                 // Field Y:D
        17: aload_1
        18: getfield      #20                 // Field Y:D
        21: dsub
        22: aload_0
        23: getfield      #22                 // Field Z:D
        26: aload_1
        27: getfield      #22                 // Field Z:D
        30: dsub
        31: invokespecial #28                 // Method "<init>":(DDD)V
        34: areturn
      LineNumberTable:
        line 34: 0

  public static kool.std.-Vector3$Double- Times$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=2, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: aload_1
         9: getfield      #18                 // Field X:D
        12: dmul
        13: aload_0
        14: getfield      #20                 // Field Y:D
        17: aload_1
        18: getfield      #20                 // Field Y:D
        21: dmul
        22: aload_0
        23: getfield      #22                 // Field Z:D
        26: aload_1
        27: getfield      #22                 // Field Z:D
        30: dmul
        31: invokespecial #28                 // Method "<init>":(DDD)V
        34: areturn
      LineNumberTable:
        line 38: 0

  public static kool.std.-Vector3$Double- Times$Double$kool/std/-Vector3$Double-(double, kool.std.-Vector3$Double-);
    descriptor: (DLkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=3, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: dload_0
         5: aload_1
         6: getfield      #18                 // Field X:D
         9: dmul
        10: dload_0
        11: aload_1
        12: getfield      #20                 // Field Y:D
        15: dmul
        16: dload_0
        17: aload_1
        18: getfield      #22                 // Field Z:D
        21: dmul
        22: invokespecial #28                 // Method "<init>":(DDD)V
        25: areturn
      LineNumberTable:
        line 42: 0

  public static kool.std.-Vector3$Double- Times$kool/std/-Vector3$Double-$Double(kool.std.-Vector3$Double-, double);
    descriptor: (Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=2
         0: dload_1
         1: aload_0
         2: invokestatic  #36                 // Method "Times$Double$kool/std/-Vector3$Double-":(DLkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
         5: areturn
      LineNumberTable:
        line 46: 0

  public static kool.std.-Vector3$Double- Div$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=2, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: aload_1
         9: getfield      #18                 // Field X:D
        12: ddiv
        13: aload_0
        14: getfield      #20                 // Field Y:D
        17: aload_1
        18: getfield      #20                 // Field Y:D
        21: ddiv
        22: aload_0
        23: getfield      #22                 // Field Z:D
        26: aload_1
        27: getfield      #22                 // Field Z:D
        30: ddiv
        31: invokespecial #28                 // Method "<init>":(DDD)V
        34: areturn
      LineNumberTable:
        line 50: 0

  public static kool.std.-Vector3$Double- Div$kool/std/-Vector3$Double-$Double(kool.std.-Vector3$Double-, double);
    descriptor: (Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=10, locals=3, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: dload_1
         9: ddiv
        10: aload_0
        11: getfield      #20                 // Field Y:D
        14: dload_1
        15: ddiv
        16: aload_0
        17: getfield      #22                 // Field Z:D
        20: dload_1
        21: ddiv
        22: invokespecial #28                 // Method "<init>":(DDD)V
        25: areturn
      LineNumberTable:
        line 54: 0

  public static boolean Equals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getfield      #18                 // Field X:D
         4: aload_1
         5: getfield      #18                 // Field X:D
         8: dcmpl
         9: ifeq          15
        12: goto          49
        15: aload_0
        16: getfield      #20                 // Field Y:D
        19: aload_1
        20: getfield      #20                 // Field Y:D
        23: dcmpl
        24: ifeq          30
        27: goto          49
        30: aload_0
        31: getfield      #22                 // Field Z:D
        34: aload_1
        35: getfield      #22                 // Field Z:D
        38: dcmpl
        39: ifeq          45
        42: goto          49
        45: iconst_1
        46: goto          50
        49: iconst_0
        50: ireturn
      LineNumberTable:
        line 58: 0

  public static boolean NotEquals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #43                 // Method "Equals$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Z
         5: ifne          15
         8: goto          11
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 62: 0

  public static kool.std.-Vector3$Double- LogicXor$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #48                 // Method Cross:(Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
         5: areturn
      LineNumberTable:
        line 66: 0

  public static double LogicOr$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-(kool.std.-Vector3$Double-, kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)D
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #54                 // Method Dot:(Lkool/std/-Vector3$Double-;)D
         5: dreturn
      LineNumberTable:
        line 70: 0

  public double Angle(kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;)D
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #54                 // Method Dot:(Lkool/std/-Vector3$Double-;)D
         5: aload_0
         6: invokevirtual #59                 // Method Magnitude:()D
         9: aload_1
        10: invokevirtual #59                 // Method Magnitude:()D
        13: dmul
        14: ddiv
        15: invokestatic  #65                 // Method java/lang/Math.acos:(D)D
        18: dreturn
      LineNumberTable:
        line 0: 0
        line 78: 1
        line 0: 5
        line 78: 9

  public double Distance(kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;)D
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #68                 // Method "Minus$kool/std/-Vector3$Double-$kool/std/-Vector3$Double-":(Lkool/std/-Vector3$Double-;Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
         5: invokevirtual #59                 // Method Magnitude:()D
         8: dreturn
      LineNumberTable:
        line 82: 0

  public double Magnitude();
    descriptor: ()D
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field X:D
         4: aload_0
         5: getfield      #18                 // Field X:D
         8: dmul
         9: aload_0
        10: getfield      #20                 // Field Y:D
        13: aload_0
        14: getfield      #20                 // Field Y:D
        17: dmul
        18: dadd
        19: aload_0
        20: getfield      #22                 // Field Z:D
        23: aload_0
        24: getfield      #22                 // Field Z:D
        27: dmul
        28: dadd
        29: invokestatic  #71                 // Method java/lang/Math.sqrt:(D)D
        32: dreturn
      LineNumberTable:
        line 86: 0

  public kool.std.-Vector3$Double- Normalized();
    descriptor: ()Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #59                 // Method Magnitude:()D
         5: invokestatic  #75                 // Method "Div$kool/std/-Vector3$Double-$Double":(Lkool/std/-Vector3$Double-;D)Lkool/std/-Vector3$Double-;
         8: areturn
      LineNumberTable:
        line 90: 0
        line 0: 1

  public double Dot(kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;)D
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: getfield      #18                 // Field X:D
         4: aload_1
         5: getfield      #18                 // Field X:D
         8: dmul
         9: aload_0
        10: getfield      #20                 // Field Y:D
        13: aload_1
        14: getfield      #20                 // Field Y:D
        17: dmul
        18: dadd
        19: aload_0
        20: getfield      #22                 // Field Z:D
        23: aload_1
        24: getfield      #22                 // Field Z:D
        27: dmul
        28: dadd
        29: dreturn
      LineNumberTable:
        line 94: 0

  public kool.std.-Vector3$Double- Cross(kool.std.-Vector3$Double-);
    descriptor: (Lkool/std/-Vector3$Double-;)Lkool/std/-Vector3$Double-;
    flags: ACC_PUBLIC
    Code:
      stack=12, locals=2, args_size=2
         0: new           #2                  // class "kool/std/-Vector3$Double-"
         3: dup
         4: aload_0
         5: getfield      #20                 // Field Y:D
         8: aload_1
         9: getfield      #22                 // Field Z:D
        12: dmul
        13: aload_0
        14: getfield      #22                 // Field Z:D
        17: aload_1
        18: getfield      #20                 // Field Y:D
        21: dmul
        22: dsub
        23: aload_0
        24: getfield      #22                 // Field Z:D
        27: aload_1
        28: getfield      #18                 // Field X:D
        31: dmul
        32: aload_0
        33: getfield      #18                 // Field X:D
        36: aload_1
        37: getfield      #22                 // Field Z:D
        40: dmul
        41: dsub
        42: aload_0
        43: getfield      #18                 // Field X:D
        46: aload_1
        47: getfield      #20                 // Field Y:D
        50: dmul
        51: aload_0
        52: getfield      #20                 // Field Y:D
        55: aload_1
        56: getfield      #18                 // Field X:D
        59: dmul
        60: dsub
        61: invokespecial #28                 // Method "<init>":(DDD)V
        64: areturn
      LineNumberTable:
        line 98: 0
        line 99: 23
        line 100: 42

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: new           #79                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
         7: new           #79                 // class java/lang/StringBuilder
        10: dup
        11: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
        14: new           #79                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
        21: new           #79                 // class java/lang/StringBuilder
        24: dup
        25: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
        28: new           #79                 // class java/lang/StringBuilder
        31: dup
        32: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
        35: new           #79                 // class java/lang/StringBuilder
        38: dup
        39: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
        42: ldc           #82                 // String (
        44: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: aload_0
        48: getfield      #18                 // Field X:D
        51: invokevirtual #89                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
        54: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: ldc           #93                 // String ,
        62: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        65: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        68: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        71: aload_0
        72: getfield      #20                 // Field Y:D
        75: invokevirtual #89                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
        78: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        81: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        84: ldc           #93                 // String ,
        86: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        89: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        92: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: aload_0
        96: getfield      #22                 // Field Z:D
        99: invokevirtual #89                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
       102: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       105: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: ldc           #95                 // String )
       110: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       113: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       116: areturn
      LineNumberTable:
        line 104: 0
}
SourceFile: "Vector3.kool"
